# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name : Make application.properties
      run: |
         cd ./src/main/resources
         touch ./application.properties
         touch ./jwt.properties        
         echo "${{ secrets.PROPERTIES }}" > ./application.properties
         echo "${{ secrets.JWT_KEY }}" > ./jwt.properties
      shell: bash

    - name: Decode and create keystore.p12
      env:
        KEY_P12_BASE64: ${{ secrets.SSL_KEY }}
      run: |
        echo -n "$KEY_P12_BASE64" | base64 --decode > keystore.p12
    
    - name: give permission
      run : chmod +x ./gradlew
      
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/server:springmvc .

    - name: docker login
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/server:springmvc